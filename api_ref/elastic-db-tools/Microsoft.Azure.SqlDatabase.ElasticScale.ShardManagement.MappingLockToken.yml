items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  id: MappingLockToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Create
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.ForceUnlock
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.NoLock
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  langs:
  - csharp
  - vb
  name: MappingLockToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MappingLockToken
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 12
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nPublic type that represents the owner of a lock held on a mapping\n"
  remarks: This class is immutable
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract(Name = "MappingLockToken", Namespace = "")]

      public sealed class MappingLockToken : IEquatable<MappingLockToken>
    content.vb: >-
      <Serializable>

      <DataContract(Name:="MappingLockToken", Namespace:="")>

      Public NotInheritable Class MappingLockToken
          Implements IEquatable(Of MappingLockToken)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: MappingLockToken
    - name: Namespace
      type: System.String
      value: 
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.NoLock
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.NoLock
  id: NoLock
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: NoLock
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.NoLock
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: NoLock
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nToken representing the default state where the mapping isn't locked\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes", Justification = "MappingLockToken is an immutable type")]

      public static readonly MappingLockToken NoLock
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes", Justification:="MappingLockToken is an immutable type")>

      Public Shared ReadOnly NoLock As MappingLockToken
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Security
    - type: System.String
      value: CA2104:DoNotDeclareReadOnlyMutableReferenceTypes
    namedArguments:
    - name: Justification
      type: System.String
      value: MappingLockToken is an immutable type
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.ForceUnlock
  commentId: F:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.ForceUnlock
  id: ForceUnlock
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: ForceUnlock
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.ForceUnlock
  type: Field
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ForceUnlock
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nToken that can be used to force an unlock on any locked mapping\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes", Justification = "MappingLockToken is an immutable type")]

      public static readonly MappingLockToken ForceUnlock
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes", Justification:="MappingLockToken is an immutable type")>

      Public Shared ReadOnly ForceUnlock As MappingLockToken
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Security
    - type: System.String
      value: CA2104:DoNotDeclareReadOnlyMutableReferenceTypes
    namedArguments:
    - name: Justification
      type: System.String
      value: MappingLockToken is an immutable type
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Create
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Create
  id: Create
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: Create()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Create()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Create
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 52
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates an instance of <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static MappingLockToken Create()
    content.vb: Public Shared Function Create As MappingLockToken
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: Equals(MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 73
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two instances of <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken\" data-throw-if-not-resolved=\"false\"></xref>\nto see if they have the same owner\n"
  example: []
  syntax:
    content: public bool Equals(MappingLockToken other)
    content.vb: Public Function Equals(other As MappingLockToken) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: 
    return:
      type: System.Boolean
      description: True if they both belong to the same lock owner
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: Equality(MappingLockToken, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Equality
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 89
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nEquality operator.\n"
  example: []
  syntax:
    content: public static bool operator ==(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
    content.vb: Public Shared Operator =(leftMappingLockToken As MappingLockToken, rightMappingLockToken As MappingLockToken) As Boolean
    parameters:
    - id: leftMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    - id: rightMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: True if both belong to the same lock owner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: Inequality(MappingLockToken, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Inequality
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 100
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nInequality operator.\n"
  example: []
  syntax:
    content: public static bool operator !=(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
    content.vb: Public Shared Operator <>(leftMappingLockToken As MappingLockToken, rightMappingLockToken As MappingLockToken) As Boolean
    parameters:
    - id: leftMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    - id: rightMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: True if both belong to the same lock owner
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: Src/ElasticScale.Client/ShardManagement/Shard/MappingLockToken.cs
    startLine: 109
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<MappingLockToken>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: IEquatable(Of MappingLockToken)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
    name: MappingLockToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
    name: MappingLockToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: MappingLockToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(MappingLockToken)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
    name: MappingLockToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
    name: MappingLockToken
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: true
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
