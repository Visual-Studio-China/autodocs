items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  id: ShardMapManagerFactory
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreatePerformanceCategoryAndCounters
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  langs:
  - csharp
  - vb
  name: ShardMapManagerFactory
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardMapManagerFactory
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nFactory for <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref>s facilitates the creation and management\nof shard map manager persistent state. Use this class as the entry point to the library's\nobject hierarchy.\n"
  example: []
  syntax:
    content: public class ShardMapManagerFactory
    content.vb: Public Class ShardMapManagerFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String)
  id: CreateSqlShardMapManager(System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: CreateSqlShardMapManager(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 72
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> and its corresponding storage structures in the specified SQL Server database,\nwith <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public static ShardMapManager CreateSqlShardMapManager(string connectionString)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Shared Function CreateSqlShardMapManager(connectionString As String) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for creating shard map manager database.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode)
  id: CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: CreateSqlShardMapManager(String, ShardMapManagerCreateMode)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 92
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> and its corresponding storage structures in the specified SQL Server database, \nwith <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public static ShardMapManager CreateSqlShardMapManager(string connectionString, ShardMapManagerCreateMode createMode)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Shared Function CreateSqlShardMapManager(connectionString As String, createMode As ShardMapManagerCreateMode) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for creating shard map manager database.
    - id: createMode
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
      description: Describes the option selected by the user for creating shard map manager database.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  id: CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: CreateSqlShardMapManager(String, RetryBehavior)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> and its corresponding storage structures in the specified SQL Server database,\nwith <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public static ShardMapManager CreateSqlShardMapManager(string connectionString, RetryBehavior retryBehavior)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Shared Function CreateSqlShardMapManager(connectionString As String, retryBehavior As RetryBehavior) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for creating shard map manager database.
    - id: retryBehavior
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
      description: Behavior for detecting transient exceptions in the store.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  id: CreateSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: CreateSqlShardMapManager(String, ShardMapManagerCreateMode, RetryBehavior)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreateSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode, Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 156
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> and its corresponding storage structures in the specified SQL Server database.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Reliability", "CA2000:Dispose objects before losing scope")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "2")]

      public static ShardMapManager CreateSqlShardMapManager(string connectionString, ShardMapManagerCreateMode createMode, RetryBehavior retryBehavior)
    content.vb: >-
      <SuppressMessage("Microsoft.Reliability", "CA2000:Dispose objects before losing scope")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="2")>

      Public Shared Function CreateSqlShardMapManager(connectionString As String, createMode As ShardMapManagerCreateMode, retryBehavior As RetryBehavior) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for creating shard map manager database.
    - id: createMode
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
      description: Describes the option selected by the user for creating shard map manager database.
    - id: retryBehavior
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
      description: Behavior for detecting transient exceptions in the store.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Reliability
    - type: System.String
      value: CA2000:Dispose objects before losing scope
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "2"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  id: TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: TryGetSqlShardMapManager(String, ShardMapManagerLoadPolicy, out ShardMapManager)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TryGetSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 309
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> from persisted state in a SQL Server database.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId = "2#")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public static bool TryGetSqlShardMapManager(string connectionString, ShardMapManagerLoadPolicy loadPolicy, out ShardMapManager shardMapManager)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId:="2#")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Shared Function TryGetSqlShardMapManager(connectionString As String, loadPolicy As ShardMapManagerLoadPolicy, ByRef shardMapManager As ShardMapManager) As Boolean
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for performing operations against shard map manager database(s).
    - id: loadPolicy
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
      description: Initialization policy.
    - id: shardMapManager
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "Shard map manager object used for performing management and read operations for shard maps, \nshards and shard mappings or <code>null</code> in case shard map manager does not exist."
    return:
      type: System.Boolean
      description: "\n<code>true</code> if a shard map manager object was created, <code>false</code> otherwise.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1021:AvoidOutParameters
    namedArguments:
    - name: MessageId
      type: System.String
      value: 2#
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy, ByRef Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager)
  name.vb: TryGetSqlShardMapManager(String, ShardMapManagerLoadPolicy, ByRef ShardMapManager)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  id: TryGetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: TryGetSqlShardMapManager(String, ShardMapManagerLoadPolicy, RetryBehavior, out ShardMapManager)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy, Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TryGetSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 334
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> from persisted state in a SQL Server database.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId = "2#")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "2")]

      public static bool TryGetSqlShardMapManager(string connectionString, ShardMapManagerLoadPolicy loadPolicy, RetryBehavior retryBehavior, out ShardMapManager shardMapManager)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId:="2#")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="2")>

      Public Shared Function TryGetSqlShardMapManager(connectionString As String, loadPolicy As ShardMapManagerLoadPolicy, retryBehavior As RetryBehavior, ByRef shardMapManager As ShardMapManager) As Boolean
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for performing operations against shard map manager database(s).
    - id: loadPolicy
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
      description: Initialization policy.
    - id: retryBehavior
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
      description: Behavior for detecting transient exceptions in the store.
    - id: shardMapManager
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "Shard map manager object used for performing management and read operations for shard maps, \nshards and shard mappings or <code>null</code> in case shard map manager does not exist."
    return:
      type: System.Boolean
      description: "\n<code>true</code> if a shard map manager object was created, <code>false</code> otherwise.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1021:AvoidOutParameters
    namedArguments:
    - name: MessageId
      type: System.String
      value: 2#
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "2"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.TryGetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy, Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior, ByRef Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager)
  name.vb: TryGetSqlShardMapManager(String, ShardMapManagerLoadPolicy, RetryBehavior, ByRef ShardMapManager)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy)
  id: GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: GetSqlShardMapManager(String, ShardMapManagerLoadPolicy)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 436
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> from persisted state in a SQL Server database, with <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public static ShardMapManager GetSqlShardMapManager(string connectionString, ShardMapManagerLoadPolicy loadPolicy)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Shared Function GetSqlShardMapManager(connectionString As String, loadPolicy As ShardMapManagerLoadPolicy) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for performing operations against shard map manager database(s).
    - id: loadPolicy
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
      description: Initialization policy.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  id: GetSqlShardMapManager(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy,Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: GetSqlShardMapManager(String, ShardMapManagerLoadPolicy, RetryBehavior)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.GetSqlShardMapManager(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy, Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetSqlShardMapManager
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 457
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager\" data-throw-if-not-resolved=\"false\"></xref> from persisted state in a SQL Server database.\n"
  example: []
  syntax:
    content: public static ShardMapManager GetSqlShardMapManager(string connectionString, ShardMapManagerLoadPolicy loadPolicy, RetryBehavior retryBehavior)
    content.vb: Public Shared Function GetSqlShardMapManager(connectionString As String, loadPolicy As ShardMapManagerLoadPolicy, retryBehavior As RetryBehavior) As ShardMapManager
    parameters:
    - id: connectionString
      type: System.String
      description: Connection parameters used for performing operations against shard map manager database(s).
    - id: loadPolicy
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
      description: Initialization policy.
    - id: retryBehavior
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
      description: Behavior for detecting transient exceptions in the store.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
      description: "\nA shard map manager object used for performing management and read operations for\nshard maps, shards and shard mappings.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreatePerformanceCategoryAndCounters
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreatePerformanceCategoryAndCounters
  id: CreatePerformanceCategoryAndCounters
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory
  langs:
  - csharp
  - vb
  name: CreatePerformanceCategoryAndCounters()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerFactory.CreatePerformanceCategoryAndCounters()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreatePerformanceCategoryAndCounters
    path: Src/ElasticScale.Client/ShardManagement/ShardMapManager/ShardMapManagerFactory.cs
    startLine: 472
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreate shard management performance counter category and counters\n"
  example: []
  syntax:
    content: public static void CreatePerformanceCategoryAndCounters()
    content.vb: Public Shared Sub CreatePerformanceCategoryAndCounters
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMapManager
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManager
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode.KeepExisting
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMapManagerCreateMode
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerCreateMode
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
- uid: Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMapManagerLoadPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMapManagerLoadPolicy
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
