items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  id: ShardLocation
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol,System.Int32)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Database
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.DataSource
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Port
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Protocol
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Server
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ToString
  langs:
  - csharp
  - vb
  name: ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardLocation
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 40
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRepresents the location of a shard in terms of its server name and database name. \nThis is used to manage connections to the shard and to support other operations on shards.\nAs opposed to a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard\" data-throw-if-not-resolved=\"false\"></xref>, a shard location is not registered with the shard map.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class ShardLocation : IEquatable<ShardLocation>
    content.vb: >-
      <Serializable>

      Public NotInheritable Class ShardLocation
          Implements IEquatable(Of ShardLocation)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol,System.Int32)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol,System.Int32)
  id: '#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol,System.Int32)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: ShardLocation(String, String, SqlProtocol, Int32)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ShardLocation(System.String, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol, System.Int32)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConstructor that allows specification of protocol, address, port and database to identify a shard.\n"
  example: []
  syntax:
    content: public ShardLocation(string server, string database, SqlProtocol protocol, int port)
    content.vb: Public Sub New(server As String, database As String, protocol As SqlProtocol, port As Integer)
    parameters:
    - id: server
      type: System.String
      description: Fully qualified hostname of the server for the shard database.
    - id: database
      type: System.String
      description: Name of the shard database.
    - id: protocol
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol
      description: Transport protcol used for the connection.
    - id: port
      type: System.Int32
      description: Port number for TCP/IP connections. Specify 0 to use the default port for the specified <em>protocol</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: ShardLocation(String, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ShardLocation(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 112
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConstructor that allows specification of address and database to identify a shard.\n"
  example: []
  syntax:
    content: public ShardLocation(string server, string database)
    content.vb: Public Sub New(server As String, database As String)
    parameters:
    - id: server
      type: System.String
      description: Fully qualified hostname of the server for the shard database.
    - id: database
      type: System.String
      description: Name of the shard database.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol)
  id: '#ctor(System.String,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: ShardLocation(String, String, SqlProtocol)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ShardLocation(System.String, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConstructor that allows specification of address and database to identify a shard.\n"
  example: []
  syntax:
    content: public ShardLocation(string server, string database, SqlProtocol protocol)
    content.vb: Public Sub New(server As String, database As String, protocol As SqlProtocol)
    parameters:
    - id: server
      type: System.String
      description: Fully qualified hostname of the server for the shard database.
    - id: database
      type: System.String
      description: Name of the shard database.
    - id: protocol
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol
      description: Transport protcol used for the connection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Protocol
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Protocol
  id: Protocol
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Protocol
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Protocol
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Protocol
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nProtocol name prefix.\n"
  example: []
  syntax:
    content: public SqlProtocol Protocol { get; }
    content.vb: Public ReadOnly Property Protocol As SqlProtocol
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Server
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Server
  id: Server
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Server
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Server
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Server
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 140
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the fully qualified hostname of the server for the shard database.\n"
  example: []
  syntax:
    content: public string Server { get; }
    content.vb: Public ReadOnly Property Server As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Port
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Port
  id: Port
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Port
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Port
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Port
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 149
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCommunication port for TCP/IP protocol. If no port is specified, the property returns 0.\n"
  example: []
  syntax:
    content: public int Port { get; }
    content.vb: Public ReadOnly Property Port As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.DataSource
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.DataSource
  id: DataSource
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: DataSource
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.DataSource
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DataSource
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 158
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDataSource name which can be used to construct connection string Data Source property.\n"
  example: []
  syntax:
    content: public string DataSource { get; }
    content.vb: Public ReadOnly Property DataSource As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Database
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Database
  id: Database
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Database
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Database
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Database
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 173
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the database name of the shard.\n"
  example: []
  syntax:
    content: public string Database { get; }
    content.vb: Public ReadOnly Property Database As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 183
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConverts the shard location to its string representation.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of shard location.
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 195
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 205
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  langs:
  - csharp
  - vb
  name: Equals(ShardLocation)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardLocation.cs
    startLine: 215
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nPerforms equality comparison with another given ShardLocation.\n"
  example: []
  syntax:
    content: public bool Equals(ShardLocation other)
    content.vb: Public Function Equals(other As ShardLocation) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
      description: ShardLocation to compare with.
    return:
      type: System.Boolean
      description: True if same locations, false otherwise.
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ShardLocation>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  name.vb: IEquatable(Of ShardLocation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: SqlProtocol
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.SqlProtocol
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ShardLocation)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: true
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
