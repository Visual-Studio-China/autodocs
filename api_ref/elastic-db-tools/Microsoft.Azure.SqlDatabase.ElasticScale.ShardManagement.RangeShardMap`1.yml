items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  id: RangeShardMap`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  langs:
  - csharp
  - vb
  name: RangeShardMap<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RangeShardMap
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRepresents a shard map of ranges.\n"
  example: []
  syntax:
    content: 'public sealed class RangeShardMap<TKey> : ShardMap, ICloneable<ShardMap>, ICloneable<RangeShardMap<TKey>>'
    content.vb: >-
      Public NotInheritable Class RangeShardMap(Of TKey)
          Inherits ShardMap
          Implements ICloneable(Of ShardMap), ICloneable(Of RangeShardMap(Of TKey))
    typeParameters:
    - id: TKey
      description: Key type.
  inheritance:
  - System.Object
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  inheritedMembers:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey)
  name.vb: RangeShardMap(Of TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String)
  id: OpenConnectionForKey(`0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKey(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKey(TKey, System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKey
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 53
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nOpens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped, with <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")]

      public SqlConnection OpenConnectionForKey(TKey key, string connectionString)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")>

      Public Function OpenConnectionForKey(key As TKey, connectionString As String) As SqlConnection
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    return:
      type: System.Data.SqlClient.SqlConnection
      description: An opened SqlConnection.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1061:DoNotHideBaseClassMethods
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKey(TKey, System.String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  id: OpenConnectionForKey(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKey(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKey(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKey
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 76
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nOpens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")]

      public SqlConnection OpenConnectionForKey(TKey key, string connectionString, ConnectionOptions options)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")>

      Public Function OpenConnectionForKey(key As TKey, connectionString As String, options As ConnectionOptions) As SqlConnection
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
      description: Options for validation operations to perform on opened connection.
    return:
      type: System.Data.SqlClient.SqlConnection
      description: An opened SqlConnection.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1061:DoNotHideBaseClassMethods
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKey(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String)
  id: OpenConnectionForKeyAsync(`0,System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKeyAsync(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKeyAsync
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nAsynchronously opens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped, with <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\nAll non-usage errors will be propagated via the returned Task.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")]

      public Task<SqlConnection> OpenConnectionForKeyAsync(TKey key, string connectionString)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")>

      Public Function OpenConnectionForKeyAsync(key As TKey, connectionString As String) As Task(Of SqlConnection)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
      description: A Task encapsulating an opened SqlConnection.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1061:DoNotHideBaseClassMethods
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, System.String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  id: OpenConnectionForKeyAsync(`0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: OpenConnectionForKeyAsync(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.OpenConnectionForKeyAsync(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: OpenConnectionForKeyAsync
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 132
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nAsynchronously opens a regular <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to the shard \nto which the specified key value is mapped.\n"
  remarks: "\nNote that the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object returned by this call is not protected against transient faults. \nCallers should follow best practices to protect the connection against transient faults \nin their application code, e.g., by using the transient fault handling \nfunctionality in the Enterprise Library from Microsoft Patterns and Practices team.\nAll non-usage errors will be propagated via the returned Task.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")]

      public Task<SqlConnection> OpenConnectionForKeyAsync(TKey key, string connectionString, ConnectionOptions options)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1061:DoNotHideBaseClassMethods")>

      Public Function OpenConnectionForKeyAsync(key As TKey, connectionString As String, options As ConnectionOptions) As Task(Of SqlConnection)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: connectionString
      type: System.String
      description: "\nConnection string with credential information such as SQL Server credentials or Integrated Security settings. \nThe hostname of the server and the database name for the shard are obtained from the lookup operation for key.\n"
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
      description: Options for validation operations to perform on opened connection.
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
      description: A Task encapsulating an opened SqlConnection.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1061:DoNotHideBaseClassMethods
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).OpenConnectionForKeyAsync(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  id: CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CreateRangeMapping(RangeMappingCreationInfo<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateRangeMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 150
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates and adds a range mapping to ShardMap.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public RangeMapping<TKey> CreateRangeMapping(RangeMappingCreationInfo<TKey> creationInfo)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Function CreateRangeMapping(creationInfo As RangeMappingCreationInfo(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: creationInfo
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{{TKey}}
      description: Information about mapping to be added.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Newly created mapping.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey))
  name.vb: CreateRangeMapping(RangeMappingCreationInfo(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CreateRangeMapping(Range<TKey>, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateRangeMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 181
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCreates and adds a range mapping to ShardMap.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> CreateRangeMapping(Range<TKey> range, Shard shard)
    content.vb: Public Function CreateRangeMapping(range As Range(Of TKey), shard As Shard) As RangeMapping(Of TKey)
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range for which to create the mapping.
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard associated with the range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Newly created mapping.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CreateRangeMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  name.vb: CreateRangeMapping(Range(Of TKey), Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: DeleteMapping(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DeleteMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 210
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRemoves a range mapping.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public void DeleteMapping(RangeMapping<TKey> mapping)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Sub DeleteMapping(mapping As RangeMapping(Of TKey))
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being removed.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: DeleteMapping(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: DeleteMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DeleteMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 222
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nRemoves a range mapping.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public void DeleteMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Sub DeleteMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being removed.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).DeleteMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: DeleteMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingForKey(`0)
  id: GetMappingForKey(`0)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappingForKey(TKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappingForKey(TKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappingForKey
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 252
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nLooks up the key value and returns the corresponding mapping.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> GetMappingForKey(TKey key)
    content.vb: Public Function GetMappingForKey(key As TKey) As RangeMapping(Of TKey)
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that contains the key value.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappingForKey(TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  id: TryGetMappingForKey(`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0}@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: TryGetMappingForKey(TKey, out RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.TryGetMappingForKey(TKey, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TryGetMappingForKey
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 279
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nTries to looks up the key value and place the corresponding mapping in <em>rangeMapping</em>.\n"
  example: []
  syntax:
    content: public bool TryGetMappingForKey(TKey key, out RangeMapping<TKey> rangeMapping)
    content.vb: Public Function TryGetMappingForKey(key As TKey, ByRef rangeMapping As RangeMapping(Of TKey)) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: Input key value.
    - id: rangeMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that contains the key value.
    return:
      type: System.Boolean
      description: <code>true</code> if mapping is found, <code>false</code> otherwise.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).TryGetMappingForKey(TKey, ByRef Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: TryGetMappingForKey(TKey, ByRef RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings
  id: GetMappings
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings for the shard map.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> GetMappings()
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification:="Necessary to allow different types of keys")>

      Public Function GetMappings As IReadOnlyList(Of RangeMapping(Of TKey))
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of all range mappings on the shard map.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
    namedArguments:
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Range<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 335
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist within given range.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> GetMappings(Range<TKey> range)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification:="Necessary to allow different types of keys")>

      Public Function GetMappings(range As Range(Of TKey)) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range value, any mapping overlapping with the range will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given range constraint.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
    namedArguments:
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey))
  name.vb: GetMappings(Range(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 369
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist for the given shard.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> GetMappings(Shard shard)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification:="Necessary to allow different types of keys")>

      Public Function GetMappings(shard As Shard) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard for which the mappings will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given shard constraint.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
    namedArguments:
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  id: GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappings(Range<TKey>, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 404
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets all the range mappings that exist within given range and given shard.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> GetMappings(Range<TKey> range, Shard shard)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures", Justification:="Necessary to allow different types of keys")>

      Public Function GetMappings(range As Range(Of TKey), shard As Shard) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
      description: Range value, any mapping overlapping with the range will be returned.
    - id: shard
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
      description: Shard for which the mappings will be returned.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of mappings that satisfy the given range and shard constraints.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
    namedArguments:
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  name.vb: GetMappings(Range(Of TKey), Shard)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 439
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping)
    content.vb: Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MarkMappingOffline(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 450
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MarkMappingOffline(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>, MappingOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 461
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping, MappingOptions options)
    content.vb: Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey), options As MappingOptions) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions
      description: Options for validation operations to perform on opened connection to affected shard.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  name.vb: MarkMappingOffline(RangeMapping(Of TKey), MappingOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  id: MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOffline(RangeMapping<TKey>, MappingLockToken, MappingOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOffline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 473
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping offline.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public RangeMapping<TKey> MarkMappingOffline(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken, MappingOptions options)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Function MarkMappingOffline(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken, options As MappingOptions) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    - id: options
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions
      description: Options for validation operations to perform on opened connection to affected shard.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An offline mapping.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOffline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions)
  name.vb: MarkMappingOffline(RangeMapping(Of TKey), MappingLockToken, MappingOptions)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOnline(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOnline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 505
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping online.\n"
  example: []
  syntax:
    content: public RangeMapping<TKey> MarkMappingOnline(RangeMapping<TKey> mapping)
    content.vb: Public Function MarkMappingOnline(mapping As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An online mapping.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MarkMappingOnline(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MarkMappingOnline(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MarkMappingOnline
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 516
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMarks the specified mapping online.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public RangeMapping<TKey> MarkMappingOnline(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Function MarkMappingOnline(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: An online mapping.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MarkMappingOnline(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MarkMappingOnline(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: GetMappingLockOwner(RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetMappingLockOwner
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 548
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nGets the lock owner id of the specified mapping.\n"
  example: []
  syntax:
    content: public MappingLockToken GetMappingLockOwner(RangeMapping<TKey> mapping)
    content.vb: Public Function GetMappingLockOwner(mapping As RangeMapping(Of TKey)) As MappingLockToken
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).GetMappingLockOwner(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: GetMappingLockOwner(RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: LockMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: LockMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 579
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nLocks the mapping for the specified owner\nThe state of a locked mapping can only be modified by the lock owner.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public void LockMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Sub LockMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).LockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: LockMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UnlockMapping(RangeMapping<TKey>, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UnlockMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 612
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUnlocks the specified mapping\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public void UnlockMapping(RangeMapping<TKey> mapping, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Sub UnlockMapping(mapping As RangeMapping(Of TKey), mappingLockToken As MappingLockToken)
    parameters:
    - id: mapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Input range mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: UnlockMapping(RangeMapping(Of TKey), MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UnlockMapping(MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UnlockMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 642
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUnlocks all mappings in this map that belong to the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public void UnlockMapping(MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Sub UnlockMapping(mappingLockToken As MappingLockToken)
    parameters:
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UnlockMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  id: UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UpdateMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 674
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUpdates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1\" data-throw-if-not-resolved=\"false\"></xref> with the updates provided in \nthe <em>update</em> parameter.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public RangeMapping<TKey> UpdateMapping(RangeMapping<TKey> currentMapping, RangeMappingUpdate update)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Function UpdateMapping(currentMapping As RangeMapping(Of TKey), update As RangeMappingUpdate) As RangeMapping(Of TKey)
    parameters:
    - id: currentMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being updated.
    - id: update
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
      description: Updated properties of the mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: New instance of mapping with updated information.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate)
  name.vb: UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: UpdateMapping(RangeMapping<TKey>, RangeMappingUpdate, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UpdateMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 689
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nUpdates a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1\" data-throw-if-not-resolved=\"false\"></xref> with the updates provided in \nthe <em>update</em> parameter.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "2")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public RangeMapping<TKey> UpdateMapping(RangeMapping<TKey> currentMapping, RangeMappingUpdate update, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="2")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Function UpdateMapping(currentMapping As RangeMapping(Of TKey), update As RangeMappingUpdate, mappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: currentMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping being updated.
    - id: update
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
      description: Updated properties of the mapping.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: New instance of mapping with updated information.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "2"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).UpdateMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: UpdateMapping(RangeMapping(Of TKey), RangeMappingUpdate, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  id: SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: SplitMapping(RangeMapping<TKey>, TKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, TKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SplitMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 725
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nSplits the specified mapping into two new mappings using the specified key as boundary. \nThe new mappings point to the same shard as the existing mapping.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> SplitMapping(RangeMapping<TKey> existingMapping, TKey splitAt)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0", Justification:="Necessary to allow different types of keys")>

      Public Function SplitMapping(existingMapping As RangeMapping(Of TKey), splitAt As TKey) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: existingMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Existing mapping.
    - id: splitAt
      type: '{TKey}'
      description: Split point.
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of two new mappings that were created.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), TKey)
  name.vb: SplitMapping(RangeMapping(Of TKey), TKey)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},`0,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: SplitMapping(RangeMapping<TKey>, TKey, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, TKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SplitMapping
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 741
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nSplits the specified mapping into two new mappings using the specified key as boundary. \nThe new mappings point to the same shard as the existing mapping.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "2")]

      [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0", Justification = "Necessary to allow different types of keys")]

      public IReadOnlyList<RangeMapping<TKey>> SplitMapping(RangeMapping<TKey> existingMapping, TKey splitAt, MappingLockToken mappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="2")>

      <SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0", Justification:="Necessary to allow different types of keys")>

      Public Function SplitMapping(existingMapping As RangeMapping(Of TKey), splitAt As TKey, mappingLockToken As MappingLockToken) As IReadOnlyList(Of RangeMapping(Of TKey))
    parameters:
    - id: existingMapping
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Existing mapping.
    - id: splitAt
      type: '{TKey}'
      description: Split point.
    - id: mappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
      description: Read-only collection of two new mappings that were created.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "2"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1006:DoNotNestGenericTypesInMemberSignatures
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
    - name: Justification
      type: System.String
      value: Necessary to allow different types of keys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).SplitMapping(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), TKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: SplitMapping(RangeMapping(Of TKey), TKey, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  id: MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0})
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MergeMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 776
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMerges 2 contiguous mappings into a single mapping. Both left and right mappings should point\nto the same location and must be contiguous.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public RangeMapping<TKey> MergeMappings(RangeMapping<TKey> left, RangeMapping<TKey> right)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Function MergeMappings(left As RangeMapping(Of TKey), right As RangeMapping(Of TKey)) As RangeMapping(Of TKey)
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Left mapping.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Right mapping.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that results from the merge operation.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey))
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  id: MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{`0},Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: MergeMappings(RangeMapping<TKey>, RangeMapping<TKey>, MappingLockToken, MappingLockToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MergeMappings
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 794
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nMerges 2 contiguous mappings into a single mapping. Both left and right mappings should point\nto the same location and must be contiguous.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "2")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "3")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "1")]

      public RangeMapping<TKey> MergeMappings(RangeMapping<TKey> left, RangeMapping<TKey> right, MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="2")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="3")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="1")>

      Public Function MergeMappings(left As RangeMapping(Of TKey), right As RangeMapping(Of TKey), leftMappingLockToken As MappingLockToken, rightMappingLockToken As MappingLockToken) As RangeMapping(Of TKey)
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Left mapping.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Right mapping.
    - id: leftMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref> for the left mapping
    - id: rightMappingLockToken
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
      description: An instance of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken" data-throw-if-not-resolved="false"></xref> for the right mapping
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
      description: Mapping that results from the merge operation.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "2"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "3"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "1"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).MergeMappings(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey), Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken)
  name.vb: MergeMappings(RangeMapping(Of TKey), RangeMapping(Of TKey), MappingLockToken, MappingLockToken)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.Clone
  id: Clone
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.Clone()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Clone
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 839
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nClones the given range shard map.\n"
  example: []
  syntax:
    content: public RangeShardMap<TKey> Clone()
    content.vb: Public Function Clone As RangeShardMap(Of TKey)
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
      description: A cloned instance of the range shard map.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).Clone()
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1.CloneCore
  id: CloneCore
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  langs:
  - csharp
  - vb
  name: CloneCore()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>.CloneCore()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CloneCore
    path: Src/ElasticScale.Client/ShardManagement/ShardMap/RangeShardMap.cs
    startLine: 859
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nClones the current shard map instance.\n"
  example: []
  syntax:
    content: protected override ShardMap CloneCore()
    content.vb: Protected Overrides Function CloneCore As ShardMap
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
      description: Cloned shard map instance.
  overridden: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey).CloneCore()
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMap
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: Name
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.Name
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: MapType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.MapType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: KeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.KeyType
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
    name: ToString
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
    name: ToString
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: true
  name: OpenConnectionForKey<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String)
    name: OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: true
  name: OpenConnectionForKey<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKey(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey<TKey>
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKey(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKey(Of TKey)
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: true
  name: OpenConnectionForKeyAsync<TKey>(TKey, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String)
    name: OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1({TKey},System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: true
  name: OpenConnectionForKeyAsync<TKey>(TKey, String, ConnectionOptions)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)(TKey, System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
  name.vb: OpenConnectionForKeyAsync(Of TKey)(TKey, String, ConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync<TKey>
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync<TKey>
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync``1(``0,System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions)
    name: OpenConnectionForKeyAsync(Of TKey)
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.OpenConnectionForKeyAsync(Of TKey)
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
    name: ConnectionOptions
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: GetShards()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
    name: GetShards
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
    name: GetShards
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShards
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: GetShard(ShardLocation)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: GetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: GetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.GetShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: TryGetShard(ShardLocation, Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
    name: TryGetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard@)
    name: TryGetShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.TryGetShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CreateShard(ShardCreationInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
    name: CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
    name: ShardCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo)
    name: CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
    name: ShardCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardCreationInfo
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CreateShard(ShardLocation)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
    name: CreateShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CreateShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: DeleteShard(Shard)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
    name: DeleteShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
    name: DeleteShard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.DeleteShard
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: true
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions.Validate
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ConnectionOptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ConnectionOptions
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlConnection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SqlConnection>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlConnection>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.SqlClient.SqlConnection)
  name.vb: Task(Of SqlConnection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo{{TKey}}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
  name: RangeMappingCreationInfo<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey)
  name.vb: RangeMappingCreationInfo(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
  name: RangeMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey)
  name.vb: RangeMapping(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeMappingCreationInfo<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo(Of TKey)
  name.vb: RangeMappingCreationInfo(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo`1
    name: RangeMappingCreationInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingCreationInfo
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeMapping<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey)
  name.vb: RangeMapping(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range{{TKey}}
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  definition: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
  name: Range<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey)
  name.vb: Range(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Range<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range(Of TKey)
  name.vb: Range(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range`1
    name: Range
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Range
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: MappingLockToken
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingLockToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping{{TKey}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<RangeMapping<TKey>>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping<TKey>>
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping(Of TKey))
  name.vb: IReadOnlyList(Of RangeMapping(Of TKey))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping`1
    name: RangeMapping
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMapping
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  parent: System.Collections.Generic
  isExternal: true
  name: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: MappingOptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.MappingOptions
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeMappingUpdate
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeMappingUpdate
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: RangeShardMap<TKey>
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap<TKey>
  fullname.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap(Of TKey)
  name.vb: RangeShardMap(Of TKey)
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
    name: RangeShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap`1
    name: RangeShardMap
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.RangeShardMap
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  isExternal: false
  name: CloneCore()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore()
  spec.csharp:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
    name: CloneCore
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
    name: CloneCore
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap.CloneCore
  - name: (
    fullName: (
  - name: )
    fullName: )
