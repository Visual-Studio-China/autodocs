items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  id: ShardRange
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(System.Object)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeBinary
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTime
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTimeOffset
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeGuid
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt32
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt64
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeTimeSpan
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GetHashCode
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.High
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.KeyType
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Low
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.ToString
  langs:
  - csharp
  - vb
  name: ShardRange
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardRange
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nA range of shard keys between a low key and a high key.\n"
  remarks: "\nThe low key is inclusive (part of the range) while the high key is exclusive\n(not part of the range). The ShardRange class is immutable.\n"
  example: []
  syntax:
    content: 'public sealed class ShardRange : IComparable<ShardRange>, IEquatable<ShardRange>'
    content.vb: >-
      Public NotInheritable Class ShardRange
          Implements IComparable(Of ShardRange), IEquatable(Of ShardRange)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt32
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt32
  id: FullRangeInt32
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeInt32
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt32
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeInt32
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeInt32 { get; }
    content.vb: Public Shared ReadOnly Property FullRangeInt32 As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt64
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt64
  id: FullRangeInt64
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeInt64
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeInt64
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeInt64
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 34
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeInt64 { get; }
    content.vb: Public Shared ReadOnly Property FullRangeInt64 As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeGuid
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeGuid
  id: FullRangeGuid
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeGuid
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeGuid
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeGuid
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 46
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeGuid { get; }
    content.vb: Public Shared ReadOnly Property FullRangeGuid As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeBinary
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeBinary
  id: FullRangeBinary
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeBinary
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeBinary
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeBinary
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 58
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeBinary { get; }
    content.vb: Public Shared ReadOnly Property FullRangeBinary As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTime
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTime
  id: FullRangeDateTime
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeDateTime
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTime
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeDateTime
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 70
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeDateTime { get; }
    content.vb: Public Shared ReadOnly Property FullRangeDateTime As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeTimeSpan
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeTimeSpan
  id: FullRangeTimeSpan
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeTimeSpan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeTimeSpan
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeTimeSpan
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 82
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeTimeSpan { get; }
    content.vb: Public Shared ReadOnly Property FullRangeTimeSpan As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTimeOffset
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTimeOffset
  id: FullRangeDateTimeOffset
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: FullRangeDateTimeOffset
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.FullRangeDateTimeOffset
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: FullRangeDateTimeOffset
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Full range that starts from the min value for a key to the max value.
  example: []
  syntax:
    content: public static ShardRange FullRangeDateTimeOffset { get; }
    content.vb: Public Shared ReadOnly Property FullRangeDateTimeOffset As ShardRange
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: '#ctor(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: ShardRange(ShardKey, ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.ShardRange(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 108
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Constructs a shard range from low boundary (inclusive) to high high boundary (exclusive)
  example: []
  syntax:
    content: public ShardRange(ShardKey low, ShardKey high)
    content.vb: Public Sub New(low As ShardKey, high As ShardKey)
    parameters:
    - id: low
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: Low boundary (inclusive)
    - id: high
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: High boundary (exclusive)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Low
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Low
  id: Low
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Low
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Low
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Low
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 131
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Accessor for low boundary (inclusive).
  example: []
  syntax:
    content: public ShardKey Low { get; }
    content.vb: Public ReadOnly Property Low As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.High
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.High
  id: High
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: High
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.High
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: High
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 138
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Accessor for high boundary (exclusive).
  example: []
  syntax:
    content: public ShardKey High { get; }
    content.vb: Public ReadOnly Property High As ShardKey
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.KeyType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.KeyType
  id: KeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: KeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.KeyType
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: KeyType
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 145
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Gets the key type of shard range.
  example: []
  syntax:
    content: public ShardKeyType KeyType { get; }
    content.vb: Public ReadOnly Property KeyType As ShardKeyType
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.ToString
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.ToString
  id: ToString
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.ToString()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ToString
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 155
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nConverts the object to its string representation.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of the object.
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GetHashCode
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GetHashCode
  id: GetHashCode
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GetHashCode()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetHashCode
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 164
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCalculates the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: Hash code for the object.
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(System.Object)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: True if the specified object is equal to the current object; otherwise, false.
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Equals(ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Equals
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 184
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nPerforms equality comparison with another given ShardRange.\n"
  example: []
  syntax:
    content: public bool Equals(ShardRange other)
    content.vb: Public Function Equals(other As ShardRange) As Boolean
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: ShardRange to compare with.
    return:
      type: System.Boolean
      description: True if same shard range, false otherwise.
  implements:
  - System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  id: Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Contains(ShardKey)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Contains
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 206
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Checks whether the specified key is inside the range.
  example: []
  syntax:
    content: public bool Contains(ShardKey key)
    content.vb: Public Function Contains(key As ShardKey) As Boolean
    parameters:
    - id: key
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
      description: The key to check
    return:
      type: System.Boolean
      description: True if inside, false otherwise
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Contains(ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Contains(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Contains
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 216
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: Checks whether the range is inside the range.
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public bool Contains(ShardRange range)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Function Contains(range As ShardRange) As Boolean
    parameters:
    - id: range
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: The range to check.
    return:
      type: System.Boolean
      description: True if inside, false otherwise.
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: CompareTo(ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CompareTo
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 236
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nPerforms comparison between two shard range values.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId = "0")]

      public int CompareTo(ShardRange other)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1062:Validate arguments of public methods", MessageId:="0")>

      Public Function CompareTo(other As ShardRange) As Integer
    parameters:
    - id: other
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: The shard range compared with this object.
    return:
      type: System.Int32
      description: "\n-1 : if this range's low boundary is less than the <em>other</em>'s low boundary; \n-1 : if the low boundary values match and the high boundary value of this range is less than the <em>other</em>'s.\n 1 : if this range's high boundary is greater than the <em>other</em>'s high boundary;\n 1 : if the low boundary value of this range is higher than <em>other</em>'s low boundary and high boundary value of this range is less than or equal to <em>other</em>'s high boundary .\n 0 : if this range has the same boundaries as <em>other</em>.\n"
  implements:
  - System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1062:Validate arguments of public methods
    namedArguments:
    - name: MessageId
      type: System.String
      value: "0"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: LessThan(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.LessThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_LessThan
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 276
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (less than).\n"
  example: []
  syntax:
    content: public static bool operator <(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator <(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs < rhs
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: GreaterThan(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GreaterThan(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_GreaterThan
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 294
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (greater than).\n"
  example: []
  syntax:
    content: public static bool operator>(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator>(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs > rhs
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.LessThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_LessThanOrEqual
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 305
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (less or equal). \n"
  example: []
  syntax:
    content: public static bool operator <=(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator <=(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs <= rhs
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.GreaterThanOrEqual(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_GreaterThanOrEqual
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 316
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nCompares two <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange\" data-throw-if-not-resolved=\"false\"></xref> using lexicographic order (greater or equal). \n"
  example: []
  syntax:
    content: public static bool operator >=(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator >=(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange" data-throw-if-not-resolved="false"></xref> of the operator.
    return:
      type: System.Boolean
      description: True if lhs >= rhs
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Equality(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Equality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Equality
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 327
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nEquality operator.\n"
  example: []
  syntax:
    content: public static bool operator ==(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator =(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side
    return:
      type: System.Boolean
      description: True if the two objects are equal, false in all other cases
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  id: op_Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  langs:
  - csharp
  - vb
  name: Inequality(ShardRange, ShardRange)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange.Inequality(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  type: Operator
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: op_Inequality
    path: Src/ElasticScale.Client/ShardManagement/Shard/ShardRange.cs
    startLine: 338
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  summary: "\nInequality operator.\n"
  example: []
  syntax:
    content: public static bool operator !=(ShardRange left, ShardRange right)
    content.vb: Public Shared Operator <>(left As ShardRange, right As ShardRange) As Boolean
    parameters:
    - id: left
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Left hand side
    - id: right
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
      description: Right hand side
    return:
      type: System.Boolean
      description: True if the two objects are not equal, false in all other cases
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ShardRange>
  fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>
  fullname.vb: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  name.vb: IComparable(Of ShardRange)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ShardRange>
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  name.vb: IEquatable(Of ShardRange)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable`1
  parent: System
  isExternal: true
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: true
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardRange
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardKey
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKey
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardKeyType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardKeyType
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: System.IEquatable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ShardRange)
  fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>.Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  fullname.vb: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange).Equals(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: true
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  parent: System.IComparable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ShardRange)
  fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>.CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  fullname.vb: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange).CompareTo(Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange>.CompareTo
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange).CompareTo
    isExternal: true
  - name: (
    fullName: (
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
    name: ShardRange
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardRange
  - name: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: true
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
