items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  id: MultiShardConnection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation},System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.CreateCommand
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Dispose
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.ShardLocations
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Shards
  langs:
  - csharp
  - vb
  name: MultiShardConnection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardConnection
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nRepresents a connection to a set of shards and provides the ability to process queries across the shard set.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Multi")]

      public sealed class MultiShardConnection : IDisposable
    content.vb: >-
      <SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId:="Multi")>

      Public NotInheritable Class MultiShardConnection
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1704:IdentifiersShouldBeSpelledCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Multi
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard},System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard},System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: MultiShardConnection(IEnumerable<Shard>, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.MultiShardConnection(System.Collections.Generic.IEnumerable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard>, System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nMultiple Active Result Sets (MARS) are not supported and are disabled for any processing at the shards.\n"
  example: []
  syntax:
    content: public MultiShardConnection(IEnumerable<Shard> shards, string connectionString)
    content.vb: Public Sub New(shards As IEnumerable(Of Shard), connectionString As String)
    parameters:
    - id: shards
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard}
      description: The collection of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard" data-throw-if-not-resolved="false"></xref>s used for this connection instances.
    - id: connectionString
      type: System.String
      description: "\nThese credentials will be used to connect to the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard\" data-throw-if-not-resolved=\"false\"></xref>s. \nThe same credentials are used on all shards. \nTherefore, all shards need to provide the appropriate permissions for these credentials to execute the command.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.MultiShardConnection(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard), System.String)
  name.vb: MultiShardConnection(IEnumerable(Of Shard), String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation},System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation},System.String)'
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: MultiShardConnection(IEnumerable<ShardLocation>, String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.MultiShardConnection(System.Collections.Generic.IEnumerable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation>, System.String)
  type: Constructor
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: .ctor
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 95
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nMultiple Active Result Sets (MARS) are not supported and are disabled for any processing at the shards.\n"
  example: []
  syntax:
    content: public MultiShardConnection(IEnumerable<ShardLocation> shardLocations, string connectionString)
    content.vb: Public Sub New(shardLocations As IEnumerable(Of ShardLocation), connectionString As String)
    parameters:
    - id: shardLocations
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
      description: The collection of <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation" data-throw-if-not-resolved="false"></xref>s used for this connection instances.
    - id: connectionString
      type: System.String
      description: "\nThese credentials will be used to connect to the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard\" data-throw-if-not-resolved=\"false\"></xref>s. \nThe same credentials are used on all shards. \nTherefore, all shards need to provide the appropriate permissions for these credentials to execute the command.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.MultiShardConnection(System.Collections.Generic.IEnumerable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation), System.String)
  name.vb: MultiShardConnection(IEnumerable(Of ShardLocation), String)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Shards
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Shards
  id: Shards
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: Shards
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Shards
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Shards
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 133
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the collection of <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard\" data-throw-if-not-resolved=\"false\"></xref>s associated with this connection.\n"
  example: []
  syntax:
    content: public IEnumerable<Shard> Shards { get; }
    content.vb: Public ReadOnly Property Shards As IEnumerable(Of Shard)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.ShardLocations
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.ShardLocations
  id: ShardLocations
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: ShardLocations
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.ShardLocations
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardLocations
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 142
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the collection of <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation\" data-throw-if-not-resolved=\"false\"></xref>s associated with this connection.\n"
  example: []
  syntax:
    content: public IEnumerable<ShardLocation> ShardLocations { get; }
    content.vb: Public ReadOnly Property ShardLocations As IEnumerable(Of ShardLocation)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.CreateCommand
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.CreateCommand
  id: CreateCommand
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.CreateCommand()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateCommand
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 166
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nCreates and returns a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand\" data-throw-if-not-resolved=\"false\"></xref> object. \nThe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand\" data-throw-if-not-resolved=\"false\"></xref> object can then be used to \nexecute a command against all shards specified in the connection.\n"
  example: []
  syntax:
    content: public MultiShardCommand CreateCommand()
    content.vb: Public Function CreateCommand As MultiShardCommand
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
      description: the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand" data-throw-if-not-resolved="false"></xref> with <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText" data-throw-if-not-resolved="false"></xref> set to null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Dispose
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Dispose
  id: Dispose
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection.Dispose()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Dispose
    path: Src/ElasticScale.Client/Query/MultiShardConnection.cs
    startLine: 174
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nReleases all resources used by this object.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardConnection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Shard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Shard>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard)
  name.vb: IEnumerable(Of Shard)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
    name: Shard
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Shard
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardLocation
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ShardLocation>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation>
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation)
  name.vb: IEnumerable(Of ShardLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
    name: ShardLocation
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardLocation
  - name: )
    fullName: )
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardCommand
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
