items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  id: SchemaInfoCollection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Add(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Get(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.GetEnumerator
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Remove(System.String)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Replace(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.TryGet(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo@)
  langs:
  - csharp
  - vb
  name: SchemaInfoCollection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SchemaInfoCollection
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nProvides storage services to a client for storing\\updating\\retrieving schema information associated with a sharding scheme \nand assigning names to individual buckets of information. The class doesn't store the association between a sharding scheme \nand the metadata unit. It's the caller's responsibility to maintain the mapping.\n"
  example: []
  syntax:
    content: 'public class SchemaInfoCollection : IEnumerable<KeyValuePair<string, SchemaInfo>>, IEnumerable'
    content.vb: >-
      Public Class SchemaInfoCollection
          Implements IEnumerable(Of KeyValuePair(Of String, SchemaInfo)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Add(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Add(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  id: Add(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: Add(String, SchemaInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Add(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Add
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nAdds a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> that is associated with the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> name. \nThe associated data contains information concerning sharded tables and\nreference tables. If you try to add a <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> with an existing name, \na name-conflict exception will be thrown\n"
  example: []
  syntax:
    content: public void Add(string shardMapName, SchemaInfo schemaInfo)
    content.vb: Public Sub Add(shardMapName As String, schemaInfo As SchemaInfo)
    parameters:
    - id: shardMapName
      type: System.String
      description: "The name of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> that \nthe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> will be associated with"
    - id: schemaInfo
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
      description: Sharding schema information.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Replace(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Replace(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  id: Replace(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: Replace(String, SchemaInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Replace(System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Replace
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nReplaces the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> with the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> name.\n"
  example: []
  syntax:
    content: public void Replace(string shardMapName, SchemaInfo schemaInfo)
    content.vb: Public Sub Replace(shardMapName As String, schemaInfo As SchemaInfo)
    parameters:
    - id: shardMapName
      type: System.String
      description: The name of the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" data-throw-if-not-resolved="false"></xref> whose <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref> will be replaced.
    - id: schemaInfo
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
      description: Sharding schema information.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.TryGet(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo@)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.TryGet(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo@)
  id: TryGet(System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo@)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: TryGet(String, out SchemaInfo)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.TryGet(System.String, out Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TryGet
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 94
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nTries to fetch the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> with the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> name without \nraising any exception if data doesn't exist.\n"
  example: []
  syntax:
    content: public bool TryGet(string shardMapName, out SchemaInfo schemaInfo)
    content.vb: Public Function TryGet(shardMapName As String, ByRef schemaInfo As SchemaInfo) As Boolean
    parameters:
    - id: shardMapName
      type: System.String
      description: >-
        The name of the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" data-throw-if-not-resolved="false"></xref> whose <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref>

        will be fetched
    - id: schemaInfo
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
      description: The <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref> that was fetched or null if retrieval failed
    return:
      type: System.Boolean
      description: true if schema info exists with given name, false otherwise.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.TryGet(System.String, ByRef Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)
  name.vb: TryGet(String, ByRef SchemaInfo)
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Get(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Get(System.String)
  id: Get(System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: Get(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Get(System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Get
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 127
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nFetches the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> stored with the supplied <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> name.\n"
  example: []
  syntax:
    content: public SchemaInfo Get(string shardMapName)
    content.vb: Public Function Get(shardMapName As String) As SchemaInfo
    parameters:
    - id: shardMapName
      type: System.String
      description: The name of the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" data-throw-if-not-resolved="false"></xref> to get.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
      description: SchemaInfo object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Remove(System.String)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: Remove(String)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.Remove(System.String)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Remove
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 160
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nRemoves the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo\" data-throw-if-not-resolved=\"false\"></xref> with the given <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap\" data-throw-if-not-resolved=\"false\"></xref> name.\n"
  example: []
  syntax:
    content: public void Remove(string shardMapName)
    content.vb: Public Sub Remove(shardMapName As String)
    parameters:
    - id: shardMapName
      type: System.String
      description: >-
        The name of the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap" data-throw-if-not-resolved="false"></xref> whose <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref>

        will be removed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.GetEnumerator
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: GetEnumerator
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 177
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nReturns an enumerator that iterates through the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<string, SchemaInfo>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, SchemaInfo))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}
      description: Enumerator of key-value pairs of name and <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref> objects.
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: System.Collections.IEnumerable.GetEnumerator
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/SchemaInfoCollection.cs
    startLine: 202
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nReturns an enumerator that iterates through this <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: Enumerator of key-value pairs of name and <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo" data-throw-if-not-resolved="false"></xref> objects.
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, SchemaInfo>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo))
  name.vb: IEnumerable(Of KeyValuePair(Of String, SchemaInfo))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
    name: SchemaInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
    name: SchemaInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: SchemaInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: ShardMap
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.ShardMap
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: SchemaInfoCollection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfoCollection
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo>>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo>>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo)).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, SchemaInfo>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo>>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo))
  name.vb: IEnumerator(Of KeyValuePair(Of String, SchemaInfo))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
    name: SchemaInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
    name: SchemaInfo
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.SchemaInfo
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
