items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  id: TableInfo
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  - Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  langs:
  - csharp
  - vb
  name: TableInfo
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TableInfo
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nRepesents a table in a database.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "TableInfo", Namespace = "")]

      public abstract class TableInfo
    content.vb: >-
      <DataContract(Name:="TableInfo", Namespace:="")>

      Public MustInherit Class TableInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: TableInfo
    - name: Namespace
      type: System.String
      value: 
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  id: SchemaName
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  langs:
  - csharp
  - vb
  name: SchemaName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.SchemaName
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: SchemaName
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nTable's schema name.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string SchemaName { get; protected set; }
    content.vb: >-
      <DataMember>

      Public Property SchemaName As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  id: TableName
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo
  langs:
  - csharp
  - vb
  name: TableName
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema.TableInfo.TableName
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: TableName
    path: Src/ElasticScale.Client/ShardManagement/SchemaInformation/TableInfo.cs
    startLine: 27
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  summary: "\nTable name.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string TableName { get; protected set; }
    content.vb: >-
      <DataMember>

      Public Property TableName As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Schema
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
