items:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  commentId: T:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  id: MultiShardCommand
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  children:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Cancel
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Connection
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateDbParameter
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateParameter
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbConnection
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbParameterCollection
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbTransaction
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DesignTimeVisible
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Dispose(System.Boolean)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQuery
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader(System.Data.CommandBehavior)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalar
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionOptions
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionPolicy
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Parameters
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Prepare
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeout
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeoutPerShard
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionBegan
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionCanceled
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionFaulted
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionSucceeded
  - Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.UpdatedRowSource
  langs:
  - csharp
  - vb
  name: MultiShardCommand
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  type: Class
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: MultiShardCommand
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nComplements the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref> with a command object \nsimilar to the triad of <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Data.SqlClient.SqlCommand\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>. \nThe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand\" data-throw-if-not-resolved=\"false\"></xref> takes a T-SQL command statement as its input and executes the \ncommand across its collection of shards specified by its corresponding <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref>.\nThe results from processing the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand\" data-throw-if-not-resolved=\"false\"></xref> are made available through the \nexecute methods and the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DesignerCategory("Code")]

      [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Multi")]

      public sealed class MultiShardCommand : DbCommand, IComponent, IDbCommand, IDisposable
    content.vb: >-
      <DesignerCategory("Code")>

      <SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId:="Multi")>

      Public NotInheritable Class MultiShardCommand
          Inherits DbCommand
          Implements IComponent, IDbCommand, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ComponentModel.IComponent
  - System.Data.IDbCommand
  - System.IDisposable
  inheritedMembers:
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.Transaction
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.ToString
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Disposed
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ComponentModel.DesignerCategoryAttribute
    ctor: System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Code
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Naming
    - type: System.String
      value: CA1704:IdentifiersShouldBeSpelledCorrectly
    namedArguments:
    - name: MessageId
      type: System.String
      value: Multi
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText
  id: CommandText
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CommandText
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandText
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CommandText
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 191
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets or sets the command text to execute against the set of shards.\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2100:Review SQL queries for security vulnerabilities")]

      public override string CommandText { get; set; }
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2100:Review SQL queries for security vulnerabilities")>

      Public Overrides Property CommandText As String
    parameters: []
    return:
      type: System.String
  overridden: System.Data.Common.DbCommand.CommandText
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Security
    - type: System.String
      value: CA2100:Review SQL queries for security vulnerabilities
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout
  id: CommandTimeout
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CommandTimeout
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CommandTimeout
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 208
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nTime in seconds to wait for the command to be executed on ALL shards.\nA value of 0 indicates no wait time limit. The default is 300 seconds.\n"
  example: []
  syntax:
    content: public override int CommandTimeout { get; set; }
    content.vb: Public Overrides Property CommandTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Data.Common.DbCommand.CommandTimeout
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard
  id: CommandTimeoutPerShard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CommandTimeoutPerShard
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CommandTimeoutPerShard
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 218
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis property controls the timeout for running\na command against individual shards.\n"
  example: []
  syntax:
    content: public int CommandTimeoutPerShard { get; set; }
    content.vb: Public Property CommandTimeoutPerShard As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType
  id: CommandType
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CommandType
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CommandType
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 233
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType\" data-throw-if-not-resolved=\"false\"></xref>of the command to be executed.\n"
  example: []
  syntax:
    content: public override CommandType CommandType { get; set; }
    content.vb: Public Overrides Property CommandType As CommandType
    parameters: []
    return:
      type: System.Data.CommandType
  overridden: System.Data.Common.DbCommand.CommandType
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Parameters
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Parameters
  id: Parameters
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: Parameters
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Parameters
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Parameters
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 248
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe <xref href=\"System.Data.SqlClient.SqlParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> associated with this command.\n"
  example: []
  syntax:
    content: public SqlParameterCollection Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As SqlParameterCollection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameterCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior
  id: RetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: RetryBehavior
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 263
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe retry behavior for detecting transient faults that could occur when connecting to and\nexecuting commands against individual shards.\n"
  remarks: "\nThe <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior\" data-throw-if-not-resolved=\"false\"></xref> is the default.\n"
  example: []
  syntax:
    content: public RetryBehavior RetryBehavior { get; set; }
    content.vb: Public Property RetryBehavior As RetryBehavior
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionPolicy
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionPolicy
  id: ExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionPolicy
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecutionPolicy
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 275
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe execution policy to use when executing\ncommands against shards. Through this policy,\nusers can control whether complete results are required,\nor whether partial results are acceptable.\n"
  example: []
  syntax:
    content: public MultiShardExecutionPolicy ExecutionPolicy { get; set; }
    content.vb: Public Property ExecutionPolicy As MultiShardExecutionPolicy
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Connection
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Connection
  id: Connection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: Connection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Connection
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Connection
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 284
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the current instance of the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection\" data-throw-if-not-resolved=\"false\"></xref> associated with this command.\n"
  example: []
  syntax:
    content: public MultiShardConnection Connection { get; }
    content.vb: Public ReadOnly Property Connection As MultiShardConnection
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionOptions
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionOptions
  id: ExecutionOptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecutionOptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecutionOptions
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecutionOptions
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 295
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets or sets options that control how the command is executed.\nFor instance, you can use this to include the shard name as \nan additional column into the result.\n"
  example: []
  syntax:
    content: public MultiShardExecutionOptions ExecutionOptions { get; set; }
    content.vb: Public Property ExecutionOptions As MultiShardExecutionOptions
    parameters: []
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionBegan
  commentId: E:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionBegan
  id: ShardExecutionBegan
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ShardExecutionBegan
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionBegan
  type: Event
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardExecutionBegan
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 304
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe event handler invoked when execution has begun on a given shard.\n"
  example: []
  syntax:
    content: public event EventHandler<ShardExecutionEventArgs> ShardExecutionBegan
    content.vb: Public Event ShardExecutionBegan As EventHandler(Of ShardExecutionEventArgs)
    return:
      type: System.EventHandler{Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionSucceeded
  commentId: E:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionSucceeded
  id: ShardExecutionSucceeded
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ShardExecutionSucceeded
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionSucceeded
  type: Event
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardExecutionSucceeded
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 310
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe event handler invoked when execution has successfully completed on a given shard or its \nshard-specific <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> has been returned.\n"
  example: []
  syntax:
    content: public event EventHandler<ShardExecutionEventArgs> ShardExecutionSucceeded
    content.vb: Public Event ShardExecutionSucceeded As EventHandler(Of ShardExecutionEventArgs)
    return:
      type: System.EventHandler{Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionFaulted
  commentId: E:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionFaulted
  id: ShardExecutionFaulted
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ShardExecutionFaulted
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionFaulted
  type: Event
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardExecutionFaulted
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 317
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe event handler invoked when execution on a given shard has faulted. This handler is only\ninvoked on exceptions for which execution could not be retried further as a result of \nthe exception's non-transience or as a result of the chosen <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public event EventHandler<ShardExecutionEventArgs> ShardExecutionFaulted
    content.vb: Public Event ShardExecutionFaulted As EventHandler(Of ShardExecutionEventArgs)
    return:
      type: System.EventHandler{Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionCanceled
  commentId: E:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionCanceled
  id: ShardExecutionCanceled
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ShardExecutionCanceled
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ShardExecutionCanceled
  type: Event
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ShardExecutionCanceled
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 324
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe event handler invoked when execution on a given shard is canceled, either explicitly via\nthe provided <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> or implicitly as a result of the chosen\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public event EventHandler<ShardExecutionEventArgs> ShardExecutionCanceled
    content.vb: Public Event ShardExecutionCanceled As EventHandler(Of ShardExecutionEventArgs)
    return:
      type: System.EventHandler{Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbParameterCollection
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbParameterCollection
  id: DbParameterCollection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: DbParameterCollection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbParameterCollection
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DbParameterCollection
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 355
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nGets the SqlParameter Collection\n"
  example: []
  syntax:
    content: protected override DbParameterCollection DbParameterCollection { get; }
    content.vb: Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection
    parameters: []
    return:
      type: System.Data.Common.DbParameterCollection
  overridden: System.Data.Common.DbCommand.DbParameterCollection
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader
  id: ExecuteReader
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteReader()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteReader
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 382
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe ExecuteReader methods of the MultiShardCommand execute the given command statement on each shard \nand return the concatenation (i.e. UNION ALL) of the individual results from the shards in a\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The execution policy regarding result completeness can be controlled\nby setting the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>. The default execution policy is to return complete results.\n"
  example: []
  syntax:
    content: public MultiShardDataReader ExecuteReader()
    content.vb: Public Function ExecuteReader As MultiShardDataReader
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
      description: 'the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader" data-throw-if-not-resolved="false"></xref> instance with the overall concatenated result set. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: thrown if the commandText is null or empty
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: thrown if the CommandTimeout elapsed prior to completion
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteDbDataReader(CommandBehavior)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteDbDataReader
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 399
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\n- Runs the given query against all shards and returns\n    a reader that encompasses results from them.\n- Uses the MultiShardExecutionPolicy.CompleteResults as the default execution policy\n- Includes the $ShardName pseudo column in the results\n<param name=\"behavior\">Command behavior to use</param>\n<returns>MultiShardDataReader instance that encompasses results from all shards</returns>\n<exception cref=\"T:System.InvalidOperationException\">If the commandText is null or empty</exception>\n<exception cref=\"T:System.InvalidOperationException\">If the command behavior is not supported \n(CloseConnection or SingleResult or SingleRow)</exception>\n<exception cref=\"T:System.TimeoutException\">If the CommandTimeout elapsed prior to completion</exception>\n"
  example: []
  syntax:
    content: protected override DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
    content.vb: Protected Overrides Function ExecuteDbDataReader(behavior As CommandBehavior) As DbDataReader
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
    return:
      type: System.Data.Common.DbDataReader
  overridden: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader(System.Data.CommandBehavior)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteReader(CommandBehavior)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReader(System.Data.CommandBehavior)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteReader
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 415
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe ExecuteReader methods of the MultiShardCommand execute the given command statement on each shard \nand return the concatenation (i.e. UNION ALL) of the individual results from the shards in a\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The execution policy regarding result completeness can be controlled\nby setting the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>. The default execution policy is to return complete results.\n"
  example: []
  syntax:
    content: public MultiShardDataReader ExecuteReader(CommandBehavior behavior)
    content.vb: Public Function ExecuteReader(behavior As CommandBehavior) As MultiShardDataReader
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: specifies the <xref href="System.Data.CommandBehavior" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
      description: 'the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader" data-throw-if-not-resolved="false"></xref> instance with the overall concatenated result set. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "thrown if the commandText is null or empty, or if the \nspecified command behavior is not supported such as CloseConnection or SingleRow."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: thrown if the CommandTimeout elapsed prior to completion.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteReaderAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 485
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe ExecuteReader methods of the MultiShardCommand execute the given command statement on each shard \nand return the concatenation (i.e. UNION ALL) of the individual results from the shards in a\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The execution policy regarding result completeness can be controlled\nby setting the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>. The default execution policy is to return complete results.\n"
  remarks: Any exceptions during command execution are conveyed via the returned Task.
  example: []
  syntax:
    content: public Task<MultiShardDataReader> ExecuteReaderAsync()
    content.vb: Public Function ExecuteReaderAsync As Task(Of MultiShardDataReader)
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader}
      description: 'a task warapping the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader" data-throw-if-not-resolved="false"></xref> instance with the overall concatenated result set. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "thrown if the commandText is null or empty, or if the \nspecified command behavior is not supported such as CloseConnection or SingleRow."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: thrown if the CommandTimeout elapsed prior to completion.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteReaderAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 502
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe ExecuteReader methods of the MultiShardCommand execute the given command statement on each shard \nand return the concatenation (i.e. UNION ALL) of the individual results from the shards in a\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The execution policy regarding result completeness can be controlled\nby setting the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>. The default execution policy is to return complete results.\n"
  remarks: Any exceptions during command execution are conveyed via the returned Task.
  example: []
  syntax:
    content: public Task<MultiShardDataReader> ExecuteReaderAsync(CancellationToken cancellationToken)
    content.vb: Public Function ExecuteReaderAsync(cancellationToken As CancellationToken) As Task(Of MultiShardDataReader)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the command execution
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader}
      description: 'a task warapping the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader" data-throw-if-not-resolved="false"></xref> instance with the overall concatenated result set. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "thrown if the commandText is null or empty, or if the \nspecified command behavior is not supported such as CloseConnection or SingleRow."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: thrown if the CommandTimeout elapsed prior to completion.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteDbDataReaderAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 517
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\n- Executes the given query against all shards asynchronously\n- Uses the MultiShardExecutionPolicy.CompleteResults as the default execution policy\n- Includes the $ShardName pseudo column in the results\n"
  remarks: Any exceptions during command execution are conveyed via the returned Task
  example: []
  syntax:
    content: protected override Task<DbDataReader> ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
    content.vb: Protected Overrides Function ExecuteDbDataReaderAsync(behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of DbDataReader)
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: Command behavior to use
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the command execution
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task with a TResult that encompasses results from all shards
  overridden: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If the commandText is null or empty
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteReaderAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 548
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThe ExecuteReader methods of the MultiShardCommand execute the given command statement on each shard \nand return the concatenation (i.e. UNION ALL) of the individual results from the shards in a\n<xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The execution policy regarding result completeness can be controlled\nby setting the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy\" data-throw-if-not-resolved=\"false\"></xref>. The default execution policy is to return complete results.\n"
  remarks: Any exceptions during command execution are conveyed via the returned Task.
  example: []
  syntax:
    content: public Task<MultiShardDataReader> ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
    content.vb: Public Function ExecuteReaderAsync(behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of MultiShardDataReader)
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: Command behavior to use
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the command execution
    return:
      type: System.Threading.Tasks.Task{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader}
      description: 'a task warapping the <xref href="Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader" data-throw-if-not-resolved="false"></xref> instance with the overall concatenated result set. '
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "thrown if the commandText is null or empty, or if the \nspecified command behavior is not supported such as CloseConnection or SingleRow."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: thrown if the CommandTimeout elapsed prior to completion.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Cancel
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Cancel
  id: Cancel
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: Cancel()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Cancel()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Cancel
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1015
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nAttempts to cancel an in progress <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand\" data-throw-if-not-resolved=\"false\"></xref> \nand any ongoing work that is performed at the shards on behalf of the command. \n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]

      public override void Cancel()
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")>

      Public Overrides Sub Cancel
  overridden: System.Data.Common.DbCommand.Cancel
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1031:DoNotCatchGeneralExceptionTypes
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateParameter
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateParameter
  id: CreateParameter
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CreateParameter()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateParameter()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateParameter
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1074
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nCreates a new instance of a <xref href=\"System.Data.SqlClient.SqlParameter\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static SqlParameter CreateParameter()
    content.vb: Public Shared Function CreateParameter As SqlParameter
    return:
      type: System.Data.SqlClient.SqlParameter
      description: 
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateDbParameter
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateDbParameter
  id: CreateDbParameter
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: CreateDbParameter()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CreateDbParameter()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: CreateDbParameter
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1083
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nCreates an instance of the DbParameter\n"
  example: []
  syntax:
    content: protected override DbParameter CreateDbParameter()
    content.vb: Protected Overrides Function CreateDbParameter As DbParameter
    return:
      type: System.Data.Common.DbParameter
      description: 
  overridden: System.Data.Common.DbCommand.CreateDbParameter
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Dispose(System.Boolean)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Dispose
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1094
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nDispose off any unmanaged/managed resources held\n"
  example: []
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")]

      protected override void Dispose(bool disposing)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")>

      Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: 
  overridden: System.ComponentModel.Component.Dispose(System.Boolean)
  attributes:
  - type: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
    ctor: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Microsoft.Design
    - type: System.String
      value: CA1031:DoNotCatchGeneralExceptionTypes
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeout
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ResetCommandTimeout()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeout()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ResetCommandTimeout
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1133
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nResets the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout\" data-throw-if-not-resolved=\"false\"></xref> property\nto its default value\n"
  example: []
  syntax:
    content: public void ResetCommandTimeout()
    content.vb: Public Sub ResetCommandTimeout
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeoutPerShard
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeoutPerShard
  id: ResetCommandTimeoutPerShard
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ResetCommandTimeoutPerShard()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ResetCommandTimeoutPerShard()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ResetCommandTimeoutPerShard
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1142
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nResets the <xref href=\"Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard\" data-throw-if-not-resolved=\"false\"></xref> property\nto its default value\n"
  example: []
  syntax:
    content: public void ResetCommandTimeoutPerShard()
    content.vb: Public Sub ResetCommandTimeoutPerShard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Prepare
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Prepare
  id: Prepare
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: Prepare()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.Prepare()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: Prepare
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1415
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis method is currently not supported. Invoking the property will result in an exception.\n"
  example: []
  syntax:
    content: public override void Prepare()
    content.vb: Public Overrides Sub Prepare
  overridden: System.Data.Common.DbCommand.Prepare
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQuery
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQuery()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQuery()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteNonQuery
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1426
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nExecuteNonQuery is currently not supported\n"
  example: []
  syntax:
    content: public override int ExecuteNonQuery()
    content.vb: Public Overrides Function ExecuteNonQuery As Integer
    return:
      type: System.Int32
      description: 
  overridden: System.Data.Common.DbCommand.ExecuteNonQuery
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteNonQueryAsync(CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteNonQueryAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1436
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nExecuteNonQueryAsync is currently not supported\n"
  example: []
  syntax:
    content: public override Task<int> ExecuteNonQueryAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function ExecuteNonQueryAsync(cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: 
  overridden: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalar
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalar
  id: ExecuteScalar
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalar()
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalar()
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteScalar
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1566
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nExecuteScalar is currently not supported\n"
  example: []
  syntax:
    content: public override object ExecuteScalar()
    content.vb: Public Overrides Function ExecuteScalar As Object
    return:
      type: System.Object
      description: 
  overridden: System.Data.Common.DbCommand.ExecuteScalar
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync(CancellationToken)
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: ExecuteScalarAsync
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1576
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nExecuteScalarAsync is currently not supported\n"
  example: []
  syntax:
    content: public override Task<object> ExecuteScalarAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function ExecuteScalarAsync(cancellationToken As CancellationToken) As Task(Of Object)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: 
  overridden: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DesignTimeVisible
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: DesignTimeVisible
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DesignTimeVisible
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DesignTimeVisible
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1592
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis property is currently not supported. Accessing the property will result in an exception.\n"
  example: []
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    content.vb: Public Overrides Property DesignTimeVisible As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Data.Common.DbCommand.DesignTimeVisible
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbTransaction
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbTransaction
  id: DbTransaction
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: DbTransaction
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbTransaction
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DbTransaction
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1607
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis property is currently not supported. Accessing the property will result in an exception.\n"
  example: []
  syntax:
    content: protected override DbTransaction DbTransaction { get; set; }
    content.vb: Protected Overrides Property DbTransaction As DbTransaction
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
  overridden: System.Data.Common.DbCommand.DbTransaction
  modifiers.csharp:
  - protected
  - override
  - get
  - set
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.UpdatedRowSource
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: UpdatedRowSource
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.UpdatedRowSource
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: UpdatedRowSource
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1623
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nThis property is currently not supported. Accessing the property will result in an exception.\n"
  example: []
  syntax:
    content: public override UpdateRowSource UpdatedRowSource { get; set; }
    content.vb: Public Overrides Property UpdatedRowSource As UpdateRowSource
    parameters: []
    return:
      type: System.Data.UpdateRowSource
  overridden: System.Data.Common.DbCommand.UpdatedRowSource
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbConnection
  commentId: P:Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbConnection
  id: DbConnection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  langs:
  - csharp
  - vb
  name: DbConnection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.DbConnection
  type: Property
  source:
    remote:
      path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
      branch: master
      repo: https://github.com/Azure/elastic-db-tools
    id: DbConnection
    path: Src/ElasticScale.Client/Query/MultiShardCommand.cs
    startLine: 1639
  assemblies:
  - Microsoft.Azure.SqlDatabase.ElasticScale.Client
  namespace: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  summary: "\nConnections to shards. Not supported/exposed\nsince connections are managed internally by this instance\n"
  example: []
  syntax:
    content: protected override DbConnection DbConnection { get; set; }
    content.vb: Protected Overrides Property DbConnection As DbConnection
    parameters: []
    return:
      type: System.Data.Common.DbConnection
  overridden: System.Data.Common.DbCommand.DbConnection
  modifiers.csharp:
  - protected
  - override
  - get
  - set
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardConnection
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardConnection
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: true
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardCommand
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardDataReader
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.ComponentModel.Component
  parent: System.ComponentModel
  isExternal: true
  name: Component
  fullName: System.ComponentModel.Component
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: true
  name: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: true
  name: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: true
  name: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()
  name.vb: System.Data.IDbCommand.CreateParameter()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
    name: IDbCommand.CreateParameter
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
    name: System.Data.IDbCommand.CreateParameter
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
  name.vb: System.Data.IDbCommand.ExecuteReader()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
    name: IDbCommand.ExecuteReader
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
    name: System.Data.IDbCommand.ExecuteReader
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)
  name.vb: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
    name: IDbCommand.ExecuteReader
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
    name: System.Data.IDbCommand.ExecuteReader
    fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteNonQueryAsync()
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    name: ExecuteNonQueryAsync
    fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    name: ExecuteNonQueryAsync
    fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
    name: ExecuteReaderAsync
    fullName: System.Data.Common.DbCommand.ExecuteReaderAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
    name: ExecuteReaderAsync
    fullName: System.Data.Common.DbCommand.ExecuteReaderAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteScalarAsync()
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteScalarAsync
    name: ExecuteScalarAsync
    fullName: System.Data.Common.DbCommand.ExecuteScalarAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteScalarAsync
    name: ExecuteScalarAsync
    fullName: System.Data.Common.DbCommand.ExecuteScalarAsync
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.Connection
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection
  name.vb: System.Data.IDbCommand.Connection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.Parameters
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters
  name.vb: System.Data.IDbCommand.Parameters
- uid: System.Data.Common.DbCommand.Transaction
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: Transaction
  fullName: System.Data.Common.DbCommand.Transaction
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: IDbCommand.Transaction
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction
  name.vb: System.Data.IDbCommand.Transaction
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: true
  name: Dispose()
  fullName: System.ComponentModel.Component.Dispose()
  spec.csharp:
  - uid: System.ComponentModel.Component.Dispose
    name: Dispose
    fullName: System.ComponentModel.Component.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Component.Dispose
    name: Dispose
    fullName: System.ComponentModel.Component.Dispose
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: true
  name: GetService(Type)
  fullName: System.ComponentModel.Component.GetService(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.Component.GetService(System.Type)
    name: GetService
    fullName: System.ComponentModel.Component.GetService
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Component.GetService(System.Type)
    name: GetService
    fullName: System.ComponentModel.Component.GetService
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: true
  name: ToString()
  fullName: System.ComponentModel.Component.ToString()
  spec.csharp:
  - uid: System.ComponentModel.Component.ToString
    name: ToString
    fullName: System.ComponentModel.Component.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Component.ToString
    name: ToString
    fullName: System.ComponentModel.Component.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: true
  name: CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: true
  name: Events
  fullName: System.ComponentModel.Component.Events
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: true
  name: Site
  fullName: System.ComponentModel.Component.Site
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: true
  name: Container
  fullName: System.ComponentModel.Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: true
  name: DesignMode
  fullName: System.ComponentModel.Component.DesignMode
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: true
  name: Disposed
  fullName: System.ComponentModel.Component.Disposed
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.Data.Common.DbCommand.CommandText
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: CommandText
  fullName: System.Data.Common.DbCommand.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Data.Common.DbCommand.CommandTimeout
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: CommandTimeout
  fullName: System.Data.Common.DbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandType
- uid: System.Data.Common.DbCommand.CommandType
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: CommandType
  fullName: System.Data.Common.DbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: true
  name: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: true
  name: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior.DefaultRetryBehavior
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
  parent: Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: RetryBehavior
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.RetryBehavior
- uid: Microsoft.Azure.SqlDatabase.ElasticScale
  isExternal: false
  name: Microsoft.Azure.SqlDatabase.ElasticScale
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardExecutionPolicy
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionPolicy
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionOptions
  parent: Microsoft.Azure.SqlDatabase.ElasticScale.Query
  isExternal: false
  name: MultiShardExecutionOptions
  fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardExecutionOptions
- uid: System.EventHandler{Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ShardExecutionEventArgs>
  fullName: System.EventHandler<Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs>
  fullname.vb: System.EventHandler(Of Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs)
  name.vb: EventHandler(Of ShardExecutionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
    name: ShardExecutionEventArgs
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
    name: ShardExecutionEventArgs
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.ShardExecutionEventArgs
  - name: )
    fullName: )
- uid: System.EventHandler`1
  parent: System
  isExternal: true
  name: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - name: TEventArgs
    fullName: TEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    fullName: TEventArgs
  - name: )
    fullName: )
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: true
  name: IDataReader
  fullName: System.Data.IDataReader
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.RetryBehavior
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Data.Common.DbCommand.DbParameterCollection
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: DbParameterCollection
  fullName: System.Data.Common.DbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: true
  name: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.InvalidOperationException
- uid: System.TimeoutException
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
    name: ExecuteDbDataReader
    fullName: System.Data.Common.DbCommand.ExecuteDbDataReader
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
    name: ExecuteDbDataReader
    fullName: System.Data.Common.DbCommand.ExecuteDbDataReader
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: true
  name: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  name: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Threading.Tasks.Task{Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MultiShardDataReader>
  fullName: System.Threading.Tasks.Task<Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader>
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader)
  name.vb: Task(Of MultiShardDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
    name: MultiShardDataReader
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
    name: MultiShardDataReader
    fullName: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardDataReader
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
    name: ExecuteDbDataReaderAsync
    fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
    name: ExecuteDbDataReaderAsync
    fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Data.CommandBehavior
    name: CommandBehavior
    fullName: System.Data.CommandBehavior
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Common.DbDataReader)
  name.vb: Task(Of DbDataReader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.Cancel
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: Cancel()
  fullName: System.Data.Common.DbCommand.Cancel()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.Cancel
    name: Cancel
    fullName: System.Data.Common.DbCommand.Cancel
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.Cancel
    name: Cancel
    fullName: System.Data.Common.DbCommand.Cancel
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: true
  name: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.Common.DbCommand.CreateDbParameter
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: CreateDbParameter()
  fullName: System.Data.Common.DbCommand.CreateDbParameter()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.CreateDbParameter
    name: CreateDbParameter
    fullName: System.Data.Common.DbCommand.CreateDbParameter
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.CreateDbParameter
    name: CreateDbParameter
    fullName: System.Data.Common.DbCommand.CreateDbParameter
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: true
  name: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.ComponentModel.Component.Dispose(System.Boolean)
    name: Dispose
    fullName: System.ComponentModel.Component.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Component.Dispose(System.Boolean)
    name: Dispose
    fullName: System.ComponentModel.Component.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeout
- uid: Microsoft.Azure.SqlDatabase.ElasticScale.Query.MultiShardCommand.CommandTimeoutPerShard
- uid: System.Data.Common.DbCommand.Prepare
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: Prepare()
  fullName: System.Data.Common.DbCommand.Prepare()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.Prepare
    name: Prepare
    fullName: System.Data.Common.DbCommand.Prepare
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.Prepare
    name: Prepare
    fullName: System.Data.Common.DbCommand.Prepare
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteNonQuery
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteNonQuery()
  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteNonQuery
    name: ExecuteNonQuery
    fullName: System.Data.Common.DbCommand.ExecuteNonQuery
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteNonQuery
    name: ExecuteNonQuery
    fullName: System.Data.Common.DbCommand.ExecuteNonQuery
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteScalar
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteScalar()
  fullName: System.Data.Common.DbCommand.ExecuteScalar()
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteScalar
    name: ExecuteScalar
    fullName: System.Data.Common.DbCommand.ExecuteScalar
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteScalar
    name: ExecuteScalar
    fullName: System.Data.Common.DbCommand.ExecuteScalar
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    fullName: System.Data.Common.DbCommand.ExecuteScalarAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    fullName: System.Data.Common.DbCommand.ExecuteScalarAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand.DesignTimeVisible
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: DesignTimeVisible
  fullName: System.Data.Common.DbCommand.DesignTimeVisible
- uid: System.Data.Common.DbCommand.DbTransaction
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: DbTransaction
  fullName: System.Data.Common.DbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: true
  name: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Common.DbCommand.UpdatedRowSource
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: UpdatedRowSource
  fullName: System.Data.Common.DbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: true
  name: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Common.DbCommand.DbConnection
  parent: System.Data.Common.DbCommand
  isExternal: true
  name: DbConnection
  fullName: System.Data.Common.DbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  fullName: System.Data.Common.DbConnection
